// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "NativeGameplayTags.h"
	
namespace MyGamePlayTags
{
	/** 输入Tag **/
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Move);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Jump);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_EquipKatana);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_UnequipKatana);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_LightAttack_Katana);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_HeavyAttack_Katana);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Roll);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Evade);

	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_MustBeHeld);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_MustBeHeld_Block);

	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable_TargetLock);

	/** 玩家Tag **/
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Equip_Katana);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Unequip_Katana);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Light_Katana);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Heavy_Katana);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_HitPause);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Roll);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Evade);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Block);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_TargetLock);


	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weaponn_Katana);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weaponn_Scabbard);

	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_Equip_Katana);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_Unequip_Katana);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_HitPause);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_EvadeSuccess);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_BlockSuccess);

	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_JumpToFinsher);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rolling);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Blocking);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_TargetLock);

	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_SetByCaller_AttackType_Light);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_SetByCaller_AttackType_Heavy);


	/** 敌人Tag **/
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_Melee);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_Ranged);

	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Weaponn);

	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_Strafing);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_UnderAttack);


	/** 通用Tag **/
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_HitReact);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_Death);

	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_MeleeHit);	
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_HitReact);

	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_SetByCaller_BaseDamage);

	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Dead);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Front);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Left);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Right);
	MYGAME_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Back);
}	